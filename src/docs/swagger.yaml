definitions:
  models.CreateSVCP:
    properties:
      SVCPEmail:
        type: string
      SVCPPassword:
        type: string
      SVCPServiceType:
        type: string
      SVCPUsername:
        description: Define the 10 fields here
        type: string
    type: object
  models.LoginReq:
    properties:
      email:
        type: string
      logintype:
        type: string
      password:
        type: string
    type: object
  models.LoginRes:
    properties:
      accessToken:
        type: string
      logintype:
        type: string
      useremail:
        type: string
    type: object
  models.Pet:
    properties:
      age:
        type: integer
      behaviouralNotes:
        type: string
      certificate:
        type: string
      dietyPreferences:
        type: string
      gender:
        type: string
      healthInformation:
        type: string
      name:
        type: string
      ownerUsername:
        type: string
      type:
        type: string
      vaccinations:
        type: string
    type: object
  models.SVCP:
    properties:
      SVCPAdditionalImg:
        type: string
      SVCPEmail:
        type: string
      SVCPID:
        type: string
      SVCPImg:
        type: string
      SVCPPassword:
        type: string
      SVCPResponsiblePerson:
        type: string
      SVCPServiceType:
        type: string
      SVCPUsername:
        type: string
      defaultAccountNumber:
        type: string
      defaultBank:
        type: string
      description:
        type: string
      individualID:
        type: integer
      isVerified:
        type: boolean
      license:
        type: string
      location:
        type: string
      services:
        items:
          $ref: '#/definitions/models.Service'
        type: array
    type: object
  models.Service:
    properties:
      averageRating:
        type: number
      requireCert:
        type: boolean
      serviceDescription:
        type: string
      serviceImg:
        type: string
      serviceType:
        type: string
      timeslots:
        items:
          $ref: '#/definitions/models.Timeslot'
        type: array
    type: object
  models.Timeslot:
    properties:
      endTime:
        type: string
      startTime:
        type: string
    type: object
  models.User:
    properties:
      address:
        type: string
      dateOfBirth:
        type: string
      defaultAccountNumber:
        type: string
      defaultBank:
        type: string
      email:
        type: string
      fullName:
        type: string
      id:
        type: string
      individualID:
        type: integer
      password:
        type: string
      pets:
        items:
          $ref: '#/definitions/models.Pet'
        type: array
      phoneNumber:
        type: string
      profilePicture:
        type: string
      username:
        type: string
    type: object
info:
  contact: {}
paths:
  /serviceproviders:
    get:
      consumes:
      - application/json
      description: Get all service providers (authentication not required) and sensitive
        information is censorred
      parameters:
      - description: Page number(default 1)
        in: query
        name: page
        type: integer
      - description: Number of items per page(default 10)
        in: query
        name: per
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.SVCP'
            type: array
      summary: Get all service providers
      tags:
      - ServiceProviders
  /serviceproviders/{id}:
    get:
      consumes:
      - application/json
      description: Get service provider by ID (authentication not required) and sensitive
        information is censorred
      parameters:
      - description: Service Provider ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.SVCP'
      summary: Get service provider by ID
      tags:
      - ServiceProviders
    put:
      consumes:
      - application/json
      description: Update service provider (authentication required and only the service
        provider can update their own profile)
      parameters:
      - description: Service Provider ID
        in: path
        name: id
        required: true
        type: string
      - description: Service Provider Object (only the fields to be updated)
        in: body
        name: svcp
        required: true
        schema:
          type: object
      produces:
      - application/json
      responses:
        "200":
          description: svcp object that passed in the request
          schema:
            type: object
      summary: Update service provider
      tags:
      - ServiceProviders
  /serviceproviders/add-service:
    post:
      consumes:
      - application/json
      description: Add service (authentication required and only the service provider
        can update their own profile)
      parameters:
      - description: Service Object
        in: body
        name: object
        required: true
        schema:
          properties:
            service:
              $ref: '#/definitions/models.Service'
          type: object
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            properties:
              message:
                type: string
            type: object
      summary: Add service
      tags:
      - ServiceProviders
  /serviceproviders/changePassword:
    post:
      consumes:
      - application/json
      description: Change service provider password
      parameters:
      - description: Change Password Request Object
        in: body
        name: object
        required: true
        schema:
          properties:
            newpassword:
              type: string
            svcpemail:
              type: string
          type: object
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            properties:
              message:
                type: string
            type: object
      summary: Change service provider password
      tags:
      - ServiceProviders
  /serviceproviders/delete-bank-account:
    delete:
      consumes:
      - application/json
      description: Delete bank account (authentication required and only the service
        provider can update their own profile)
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            properties:
              message:
                type: string
            type: object
      summary: Delete bank account
      tags:
      - ServiceProviders
  /serviceproviders/login:
    post:
      consumes:
      - application/json
      description: if login is successful, a token is generated and set in the cookies
        and sent back with the response
      parameters:
      - description: Login Request Object
        in: body
        name: loginReq
        required: true
        schema:
          $ref: '#/definitions/models.LoginReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.LoginRes'
      summary: Login service provider
      tags:
      - ServiceProviders
  /serviceproviders/logout:
    post:
      consumes:
      - application/json
      description: the token is deleted from the cookies
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            properties:
              message:
                type: string
            type: object
      summary: Logout service provider
      tags:
      - ServiceProviders
  /serviceproviders/me:
    get:
      consumes:
      - application/json
      description: Get current service provider (authentication required)
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.SVCP'
      summary: Get current service provider
      tags:
      - ServiceProviders
  /serviceproviders/register:
    post:
      consumes:
      - application/json
      description: Register service provider (authentication not required)
      parameters:
      - description: Service Provider Object only nessasary fields
        in: body
        name: svcp
        required: true
        schema:
          $ref: '#/definitions/models.CreateSVCP'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            properties:
              message:
                type: string
              token:
                type: string
            type: object
      summary: Register service provider
      tags:
      - ServiceProviders
  /serviceproviders/set-default-bank-account:
    post:
      consumes:
      - application/json
      description: Set default bank account (authentication required and only the
        service provider can update their own profile)
      parameters:
      - description: Default Bank Account Object
        in: body
        name: object
        required: true
        schema:
          properties:
            defaultAccountNumber:
              type: string
            defaultBank:
              type: string
          type: object
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            properties:
              message:
                type: string
            type: object
      summary: Set default bank account
      tags:
      - ServiceProviders
  /serviceproviders/upload-description:
    post:
      consumes:
      - application/json
      description: Upload service provider description (authentication required and
        only the service provider can update their own profile)
      parameters:
      - description: Description Request Object
        in: body
        name: object
        required: true
        schema:
          properties:
            description:
              type: string
          type: object
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            properties:
              message:
                type: string
            type: object
      summary: Upload service provider description
      tags:
      - ServiceProviders
  /serviceproviders/upload-license:
    post:
      consumes:
      - multipart/form-data
      description: Upload service provider license (authentication required)
      parameters:
      - description: License File
        in: formData
        name: license
        required: true
        type: file
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            properties:
              message:
                type: string
              svcpEmail:
                type: string
            type: object
      summary: Upload service provider license
      tags:
      - ServiceProviders
  /user/me:
    get:
      consumes:
      - application/json
      description: Get the details of the currently authenticated user
      produces:
      - application/json
      responses:
        "202":
          description: User details
          schema:
            $ref: '#/definitions/models.User'
        "400":
          description: Failed to get token from Cookie plase login first
          schema:
            type: string
        "500":
          description: Failed to get User Email request body
          schema:
            type: string
      security:
      - CookieAuth: []
      summary: Get Current User
      tags:
      - user
  /users:
    get:
      consumes:
      - application/json
      description: Get all users (authentication not required)
      parameters:
      - description: page
        in: query
        name: page
        type: integer
      - description: per
        in: query
        name: per
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.User'
            type: array
        "400":
          description: Bad Request
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Get all users
      tags:
      - user
swagger: "2.0"
